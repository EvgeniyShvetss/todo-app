{"version":3,"sources":["redux/types/types.js","components/TaskItem/TaskItem.jsx","redux/actions/todoAction.js","components/TaskItem/index.js","components/TaskList/TaskList.jsx","components/TaskList/index.js","components/CreateTask/CreateTask.jsx","components/CreateTask/index.js","App.js","redux/reducers/todoReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["ADD_TASK","DELETE_TASK","SELECTED_TASK","RENAME_TODO","DELETE_SELECTED_TASK","mapDispatchToProps","deleteTaskAction","id","type","selectTaskAction","payload","renameTodoAction","text","TaskItem","connect","state","mode","title","done","useState","setState","value","setValue","className","checked","onChange","onSubmit","e","preventDefault","length","target","onClick","deleteSelectedTaskAction","TaskList","tasks","doneTasks","filter","item","map","task","addTaskAction","Date","now","toString","CreateTask","taskCount","initialState","todoReducer","action","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ac0d929.chunk.js","sourcesContent":["export const ADD_TASK = \"ADD_TASK\"\nexport const DELETE_TASK = \"DELETE_TASK\"\nexport const SELECTED_TASK = \"SELECTED_TASK\"\nexport const RENAME_TODO = \"RENAME_TODO\"\nexport const DELETE_SELECTED_TASK = \"DELETE_SELECTED_TASK\"\n","import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport PropTypes from \"prop-types\"\nimport \"./task-item.scss\"\nimport {\n  deleteTask,\n  selectTask,\n  renameTodo,\n} from \"../../redux/actions/todoAction\"\n\nconst TaskItem = ({\n  title,\n  deleteTaskAction,\n  id,\n  selectTaskAction,\n  done,\n  renameTodoAction,\n}) => {\n  const [state, setState] = useState(false)\n  const [value, setValue] = useState(\"\")\n  const handleChange = ({ target }) => {\n    setValue(target.value)\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (value.length >= 1) {\n      renameTodoAction(value, id)\n      setValue(\"\")\n    }\n    setState(false)\n  }\n  return (\n    <div className=\"task-item\">\n      <div className=\"task-item__text\">\n        <div className=\"task-item__check\">\n          <input\n            type=\"checkbox\"\n            checked={done}\n            onChange={() => selectTaskAction(id)}\n          />\n        </div>\n        {state ? (\n          <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={value.title} onChange={handleChange} />\n            <button type=\"submit\">\n              <i className=\"fa fa-check\" />\n            </button>\n          </form>\n        ) : (\n          <div className=\"task-item__title\">{title}</div>\n        )}\n      </div>\n      <div className=\"task-item__control\">\n        <button type=\"button\" className=\"rename\" onClick={() => setState(true)}>\n          <i className=\"fa fa-pencil\" />\n        </button>\n        <button\n          className=\"delete\"\n          type=\"button\"\n          onClick={() => deleteTaskAction(id)}\n        >\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </div>\n    </div>\n  )\n}\n\nTaskItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  deleteTaskAction: PropTypes.func.isRequired,\n  selectTaskAction: PropTypes.func.isRequired,\n  renameTodoAction: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  done: PropTypes.bool.isRequired,\n}\n\nconst mapDispatchToProps = {\n  deleteTaskAction: deleteTask,\n  selectTaskAction: selectTask,\n  renameTodoAction: renameTodo,\n}\n\nconst mapStateToProps = (state) => ({\n  mode: state.mode,\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItem)\n","import {\n  ADD_TASK,\n  DELETE_SELECTED_TASK,\n  DELETE_TASK,\n  RENAME_TODO,\n  SELECTED_TASK,\n} from \"../types/types\"\n\nexport function addTask(title) {\n  return {\n    type: ADD_TASK,\n    payload: {\n      id: Date.now().toString(),\n      title,\n      done: false,\n    },\n  }\n}\n\nexport function deleteTask(id) {\n  return {\n    type: DELETE_TASK,\n    id,\n  }\n}\n\nexport function selectTask(id) {\n  return {\n    type: SELECTED_TASK,\n    payload: id,\n  }\n}\nexport function renameTodo(text, id) {\n  return {\n    type: RENAME_TODO,\n    payload: {\n      text,\n      id,\n    },\n  }\n}\n\nexport function deleteSelectedTask() {\n  return {\n    type: DELETE_SELECTED_TASK,\n  }\n}\n","import TaskItem from \"./TaskItem\"\n\nexport default TaskItem\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport PropTypes from \"prop-types\"\nimport TaskItem from \"../TaskItem\"\nimport { deleteSelectedTask } from \"../../redux/actions/todoAction\"\nimport \"./task-list.scss\"\n\nconst TaskList = ({ tasks, deleteSelectedTaskAction }) => {\n  const doneTasks = tasks.filter((item) => item.done)\n  return (\n    <div className=\"task-list\">\n      <div className=\"task-list__item\">\n        {tasks.map((task) => (\n          <TaskItem\n            title={task.title}\n            id={task.id}\n            key={task.id}\n            done={task.done}\n          />\n        ))}\n      </div>\n      {doneTasks.length > 0 && (\n        <button type=\"button\" onClick={() => deleteSelectedTaskAction()}>\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      )}\n    </div>\n  )\n}\n\nTaskList.propTypes = {\n  tasks: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ).isRequired,\n  deleteSelectedTaskAction: PropTypes.func.isRequired,\n}\nconst mapDispatchToProps = {\n  deleteSelectedTaskAction: deleteSelectedTask,\n}\n\nconst mapStateToProps = (state) => ({\n  tasks: state.state.tasks,\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList)\n","import TaskList from \"./TaskList\"\n\nexport default TaskList\n","import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport PropTypes from \"prop-types\"\nimport \"./create-task.scss\"\nimport { addTask } from \"../../redux/actions/todoAction\"\n\nconst CreateTask = ({ addTaskAction }) => {\n  const [state, setState] = useState({ title: \"\" })\n  const handleChange = ({ target }) => {\n    setState({ ...state, title: target.value })\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (state.title.length >= 1) {\n      addTaskAction(state.title)\n      setState({ ...state, title: \"\" })\n    }\n  }\n  return (\n    <div className=\"create-task\">\n      <form onSubmit={handleSubmit} className=\"create-task__form\">\n        <input\n          className=\"create-task__input form-control\"\n          value={state.title}\n          onChange={handleChange}\n        />\n        <button\n          type=\"submit\"\n          className=\"create-task__btn btn btn-outline-primary\"\n        >\n          add\n        </button>\n      </form>\n    </div>\n  )\n}\n\nCreateTask.propTypes = {\n  addTaskAction: PropTypes.func.isRequired,\n}\n\nconst mapDispatchToProps = {\n  addTaskAction: addTask,\n}\n\nexport default connect(null, mapDispatchToProps)(CreateTask)\n","import CreateTask from \"./CreateTask\"\n\nexport default CreateTask\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport TaskList from \"./components/TaskList\"\nimport \"./App.scss\"\nimport TaskInput from \"./components/CreateTask\"\n\nconst App = (tasks) => {\n  const taskCount = tasks.length\n  return (\n    <div className=\"app\">\n      <div className=\"app__container\">\n        <h1 className=\"app_title\">Count task {taskCount}</h1>\n        <TaskInput />\n        <div className=\"task-container\">\n          <TaskList />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  tasks: state.state.tasks,\n})\n\nexport default connect(mapStateToProps, null)(App)\n","import {\n  ADD_TASK,\n  DELETE_SELECTED_TASK,\n  DELETE_TASK,\n  RENAME_TODO,\n  SELECTED_TASK,\n} from \"../types/types\"\n\nconst initialState = {\n  tasks: [\n    { id: \"0\", title: \"Yor first task\", done: false },\n    { id: \"1\", title: \"Yor second task\", done: false },\n    { id: \"2\", title: \"Yor first task\", done: false },\n  ],\n}\n\nfunction todoReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TASK:\n      return { ...state, tasks: [...state.tasks, action.payload] }\n\n    case DELETE_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.filter((item) => item.id !== action.id),\n      }\n\n    case SELECTED_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.map((item) => {\n          if (action.payload === item.id) {\n            return { ...item, done: !item.done }\n          }\n          return item\n        }),\n      }\n    case RENAME_TODO:\n      return {\n        ...state,\n        tasks: state.tasks.map((item) => {\n          if (action.payload.id === item.id) {\n            return { ...item, title: action.payload.text }\n          }\n          return item\n        }),\n      }\n    case DELETE_SELECTED_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.filter((item) => !item.done),\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default todoReducer\n","import { combineReducers } from \"redux\"\nimport todoReducer from \"./todoReducer\"\n\nconst rootReducer = combineReducers({\n  state: todoReducer,\n})\n\nexport default rootReducer\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport { createStore } from \"redux\"\nimport App from \"./App\"\nimport rootReducer from \"./redux/reducers/rootReducer\"\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}